VPT-Bev21-Message	::= CHOICE { 

-- Synchronisation Messages 
	vptprl-bev21-start-message	[1]	VPTPrlBev21StartMessage,
	vptprl-bev21-start-response 	[2]	VPTPrlBev21StartResponse,
	vptprl-bev21-stop-message	[3]	VPTPrlBev21StopMessage,
	vptprl-bev21-last-init-message	[4]	VPTPrlBev21LastInitMessage,
	vptprl-bev21-live-check-message	[5]	VPTPrlBev21LiveCheckMessage,
	vptprl-bev21-live-check-response	[6]	VPTPrlBev21LiveCheckResponse,

				-- IRS listing reference
-- Infra structure element messages
	operate-point-machine-command	[7]	OperatePointMachineCommand,	-- § 3.2.5.1
	operate-point-machine-response	[8]	OperateResponse,	-- § 3.2.5.2
	operate-direction-control-command	[9]	OperateDirectionControlCommand,	-- § 3.2.5.3
	operate-direction-control-response	[10]	OperateResponse,	-- § 3.2.5.4
	operate-non-core-element-command	[11]	OperateNonCoreElementCommand,	-- § 3.2.5.5
	operate-non-core-element-response	[12]	OperateResponse,	-- § 3.2.5.6
	block-from-operation-command	[13]	BlockFromOperationCommand,	-- § 3.2.5.7
	block-from-operation-response	[14]	OperateResponse,	-- § 3.2.5.8
	unblock-from-operation-command	[15]	UnblockFromOperationCommand,	-- § 3.2.5.9
	unblock-from-operation-response	[16]	OperateResponse,	-- § 3.2.5.10
	point-machine-report	[17]	PointMachineReport,	-- § 3.2.5.12
	direction-control-report	[18]	DirectionControlReport,	-- § 3.2.5.13
	signal-report	[19]	SignalReport,		-- § 3.2.5.14
	non-core-element-report	[20]	NonCoreElementReport,	-- § 3.2.5.15

-- Route messages
	set-route-command	[21]	SetRouteCommand,	-- § 3.3.2.1
	set-route-response	[22]	RouteResponse,	-- § 3.3.2.2
	cancel-route-command	[23]	CancelRouteCommand,	-- § 3.3.2.5
	cancel-route-response	[24]	OperateResponse,	-- § 3.3.2.6
	occupation-report	[25]	OccupationReport,	-- § 3.3.2.7
	route-report	[26]	RouteReport,		-- § 3.3.2.8
	movement-authority-report	[27]	MovementAuthorityReport,	-- § 3.3.2.9
	route-cancellation-report	[28]	RouteCancellationReport,	-- § 3.3.2.10
	block-from-set-route-command	[29]	BlockFromSetRouteCommand,	-- § 3.3.2.11
	block-from-set-route-response	[30]	OperateResponse,	-- § 3.3.2.12
	block-from-set-route-report	[31]	BlockFromSetRouteReport,	-- § 3.3.2.13
	unblock-from-set-route-command	[32]	UnblockFromSetRouteCommand,	-- § 3.3.2.14
	unblock-from-set-route-response	[33]	OperateResponse,	-- § 3.3.2.15

-- Train messages
	static-train-report	[34]	StaticTrainReport,	-- § 3.4.2.1
	dynamic-train-report	[35]	DynamicTrainReport,	-- § 3.4.2.2

-- Area messages
	give-area-command	[36]	GiveAreaCommand,	-- § 3.5.2.1
	give-area-response	[37]	AreaResponse,	-- § 3.5.2.2
	take-back-area-command	[38]	TakeBackAreaCommand,	-- § 3.5.2.3
	take-back-area-response	[39]	AreaResponse,	-- § 3.5.2.4
	area-report	[40]	AreaReport,		-- § 3.5.2.6
	disable-border-safety-provisions-command	[41]	DisableBorderSafetyProvisionsCommand,	-- § 3.5.2.7
	disable-border-safety-provisions-response 	[42]	BorderSafetyProvisionsResponse,	-- § 3.5.2.8
	enable-border-safety-provisions-command	[43]	EnableBorderSafetyProvisionsCommand,	-- § 3.5.2.9
	enable-border-safety-provisions-response	[44]	BorderSafetyProvisionsResponse, 	-- § 3.5.2.10
	border-safety-provision-report	[45]	BorderSafetyProvisionReport, 	-- § 3.5.2.11

-- Infra messages
	temporary-speed-restriction-report	[46]	TemporarySpeedRestrictionReport, 	-- § 3.6.2.4
	additional-detection-report	[47]	AdditionalDetectionReport,	-- § 3.6.2.8

-- Bev21 System Status Messages 
	bev21-system-status-report	[48]	Bev21SystemStatusReport,	-- § 3.7.2.1
	bev21-reliability-report	[49]	Bev21ReliabilityReport}	-- § 3.7.2.2



--
-- Infra structure element messages
--

OperatePointMachineCommand	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	desired-position-ind		PointMachinePosition }

OperateResponse	::= SEQUENCE {
	message-id		MessageId,
	command-id		MessageId,
	command-accepted-indication		CommandAcceptedIndication,
	reason-for-non-acceptance		ReasonForNonAcceptance OPTIONAL }

OperateDirectionControlCommand	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	desired-position-ind		DirectionControlPosition }

OperateNonCoreElementCommand	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	desired-position-ind		NonCorePosition }

BlockFromOperationCommand	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	reason-for-blocking		ReasonForBlocking }

UnblockFromOperationCommand	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId }


PointMachineReport	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	state		InfraElementState,
	position		PointMachinePosition OPTIONAL,
	defect-description		DefectDescription OPTIONAL,
	blocked-indication		BlockIndication,
	reason-for-blocking		ReasonForBlocking OPTIONAL }

DirectionControlReport	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	state		InfraElementState,
	position		DirectionControlPosition OPTIONAL }

SignalReport	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	state		InfraElementState,
	position		[0]	SignalPosition OPTIONAL,
	granted-speed		[1]	GrantedSpeed OPTIONAL }

NonCoreElementReport	::= SEQUENCE {
	message-id		MessageId,
	element-id		ElementId,
	non-core-state		NonCorePosition }
--
-- Route messages
--
SetRouteCommand	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	train-label		Trainlabel,
	match-train-label		MatchTrainlabel, 	-- always false 
	copy-train-label		CopyTrainlabel , 	-- always false
	mode		AuthorisationMode,
	integral-restriction-indication		IntegralRestrictionIndication,	-- always false
	out-of-gauge-indication		OutOfGaugeIndication,
	force-route-indication		ForceRouteIndication }

RouteResponse	::= SEQUENCE {
	message-id		MessageId,
	command-id		MessageId,
	train-label		Trainlabel, 
	command-accepted-indication		CommandAcceptedIndication,
	reason-for-non-acceptance		ReasonForNonAcceptance OPTIONAL }

CancelRouteCommand	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment ,
	emergency-brake-indication		EmergencyBrakeIndication } 	-- always forced to yes

OccupationReport	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	occupied-indication		OccupiedIndication,
	train-label		Trainlabel OPTIONAL }

RouteReport	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	authorisation-allowed		AuthorisationAllowedIndication,
	authorisation-mode		[0]	AuthorisationMode OPTIONAL,
	in-route-indication		[1]	InRouteIndication,
	train-label		Trainlabel }
	
MovementAuthorityReport	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	in-movement-authority-indication		InMovementAuthorityIndication,
	nid-operational		NIDOperational,
	ertms-id		ERTMSid,
	emergency-brake-indication		EmergencyBrakeIndication OPTIONAL,
	reason-for-revocation		ReasonForRevocation OPTIONAL}

RouteCancellationReport	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	train-label		Trainlabel,
	cancel-active-indication		CancelActiveIndication }

BlockFromSetRouteCommand	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	reason-for-blocking		ReasonForBlocking }

BlockFromSetRouteReport	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment,
	block-indication		BlockIndication,
	reason-for-blocking		ReasonForBlocking OPTIONAL }

UnblockFromSetRouteCommand	::= SEQUENCE {
	message-id		MessageId,
	infra-segment		InfraSegment }

--
-- Train messages
--
StaticTrainReport	::= SEQUENCE {
	message-id		MessageId,
	nid-operational		NIDOperational OPTIONAL,
	train-removed-indication		TrainRemovedFromDataBase,
	ertms-id		ERTMSid,
	train-length		[0]	TrainLength OPTIONAL,
	axle-load		[1]	AxleLoad OPTIONAL,
	etcs-level		[2]	ETCSlevel OPTIONAL,
	train-class		[3]	TrainClass OPTIONAL,
	out-of-gauge-indication		[4]	OutOfGaugeIndication OPTIONAL,
	radio-contact-indication		[5]	RadioContactIndication OPTIONAL}

DynamicTrainReport	::= SEQUENCE {
	message-id		MessageId,
	nid-operational		NIDOperational,
	ertms-id		ERTMSid,
	infra-segment		InfraSegment OPTIONAL,
	train-speed		TrainSpeed OPTIONAL,
	operating-mode		OperatingMode,
	slippery-track-button-state		SlipperyTrackButtonState, 	-- always released
	time-stamp		TimeStamp }

--
-- Area messages
--
GiveAreaCommand	::= SEQUENCE {
	message-id		MessageId,
	area-id		AreaId,
	area-type		AreaType,
	contract-id		ContractId } 	-- always null string

AreaResponse	::= SEQUENCE {
	message-id		MessageId,
	command-id		MessageId,
	command-accepted-indication		CommandAcceptedIndication,
	reason-for-non-acceptance		ReasonForNonAcceptance OPTIONAL,
	contract-id		ContractId } 	-- always null string

TakeBackAreaCommand	::= SEQUENCE {
	message-id		MessageId,
	area-id		AreaId,
	contract-id		ContractId } 	-- always null string


AreaReport	::= SEQUENCE {
	message-id		MessageId,
	area-id		AreaId,
	area-state		AreaState,
	area-type-origin		AreaType,
	area-type-target		AreaType,
	contract-id		ContractId } 	-- always null string

DisableBorderSafetyProvisionsCommand	::= SEQUENCE {
	message-id		MessageId,
	boundary-position		InfraPosition,
	contract-id		ContractId } 	-- always null string

BorderSafetyProvisionsResponse	::= SEQUENCE {
	message-id		MessageId,
	command-id		MessageId,
	command-accepted-indication		CommandAcceptedIndication,
	reason-for-non-acceptance		ReasonForNonAcceptance OPTIONAL,
	boundary-position		InfraPosition,
	contract-id		ContractId } 	-- always null string

EnableBorderSafetyProvisionsCommand	::= SEQUENCE {
	message-id		MessageId,
	boundary-position		InfraPosition,
	contract-id		ContractId } 	-- always null string

BorderSafetyProvisionReport	::= SEQUENCE {
	message-id		MessageId,
	boundary-position		InfraPosition,
	border-state		BorderState,
	contract-id		ContractId } 	-- always null string


--
-- Infra messages
--
TemporarySpeedRestrictionReport	::= SEQUENCE {
	message-id		MessageId,
	temporary-speed-restriction-id		TemporarySpeedRestrictionId,
	infra-segment		InfraSegment, 
	maximum-speed		MaximumSpeed OPTIONAL, 	--if not present, TSR is cancelled
	train-classes		TrainClass, 	-- always ()
	reason-for-change		ReasonForChange }

AdditionalDetectionReport	::= SEQUENCE {
	message-id		MessageId,
	device-id		DeviceId,
	state-description		StateDescription,
	notification-id		NotificationId }
--
-- Bev21 system status messages
--
Bev21SystemStatusReport	::= SEQUENCE {
	message-id		MessageId,
	notification-id		NotificationId }

Bev21ReliabilityReport	::= SEQUENCE {
	message-id		MessageId,
	elements		[0]	SET  OF ElementId OPTIONAL,
	branch-parts		[1]	SET  OF BranchPart OPTIONAL,
	reliability-indication		ReliabilityIndication }

--
-- Synchronisation messages
--
VPTPrlBev21StartMessage	::= SEQUENCE {
	protocol-ids		SEQUENCE OF VPTPrlBev21ProtocolId,
	train-traffic-area-id		TrainTrafficAreaId,
	infra-configuration-version-id		InfraConfigurationVersionId }

VPTPrlBev21StartResponse	::= SEQUENCE {
	start-accepted-indication		StartAcceptedIndication,
	protocol-id		VPTPrlBev21ProtocolId,
	reason-for-non-acceptance		ReasonForNonAcceptance OPTIONAL }

VPTPrlBev21StopMessage	::= SEQUENCE 

VPTPrlBev21LastInitMessage	::= SEQUENCE 

VPTPrlBev21LiveCheckMessage	::= SEQUENCE 

VPTPrlBev21LiveCheckResponse	::= SEQUENCE 

AlarmCode	::= INTEGER

AlarmState	::= ENUMERATED {
			cancelled (0),
			active (1) }

AreaCode		::= VisibleString	

AreaId		::= ElementId

AreaState		::= ENUMERATED { 
			given (0),
			taken (1),
			taken-by-bev21 (2) }

AreaType		::= ENUMERATED { 
			train-traffic-area (0),
			work-area (1),
			shunting-area (2),
			bridge (3),
			staff-crossing (4),
			other (5) }

AuthorisationAllowedIndication	::= BOOLEAN

AuthorisationMode	::= ENUMERATED { 
			normal (0),
			on-sight (1) }

AxleLoad		::= INTEGER 	-- in tons  

BlockIndication	::= BOOLEAN

BorderState	::= ENUMERATED { 
			bsp-enabled (0),
			vpt-requested-bsp-disabling (1),
			neighbour-requested-bsp-disabling (2),	--not supported
			bsp-disabled (3),
			bsp-inactive (4) }

BranchId		::= ElementId

BranchPart	::= SEQUENCE {
	branch-id		BranchId,
	boundary-1-distance-from-node-1		INTEGER , -- (0..999999), 	-- meters
	boundary-2-distance-from-node-2		INTEGER } -- (0..999999) } 	-- meters

CancelActiveIndication	::= BOOLEAN

CommandAcceptedIndication	::= BOOLEAN

ContractId	::= VisibleString

CopyTrainlabel	::= BOOLEAN

DefectDescription	::= ENUMERATED {
			malfunctioning (0),
			run-through (1),
			being-cranked (2) }

DeviceId		::= ElementId

DirectionControlPosition	::= ENUMERATED {
			right-direction (0),
			left-direction(1),
			left-direction-switched-off(2) }

ElementId		::= SEQUENCE {
	area-code		AreaCode,
	infra-object-type		InfraObjectType,
	infra-object-code		InfraObjectCode }

EmergencyBrakeIndication	::= BOOLEAN

EquipmentCode	::= INTEGER

ErrorCause	::= TextMessage

ERTMSid		::= INTEGER -- 24 bits

ETCSlevel		::= ENUMERATED {
			level0 (0), 	-- not used for VIS-KBV
			level1 (1), 	-- not used for VIS-KBV
			level2 (2),
			level3 (3) ,
			levelSTM (4) } 	-- not used for VIS-KBV

ForceRouteIndication	::= BOOLEAN

GrantedSpeed	::= ENUMERATED {
			speed40 (0),
			speed60 (1),
			speed80 (2),
			speed120 (3),
			speed130 (4),
			speed40flash (5),
			speed60flash (6),
			speed80flash (7),
			speed120flash (8),
			speed130flash (9) }

InfraConfigurationVersionId	::= VisibleString

InfraElementState	::= ENUMERATED {
			defined (0),
			undefined (1),
			defect (2),
			locked (3) }

InfraObjectCode	::= VisibleString

InfraObjectType	::= ENUMERATED {
			direction-control (0),
			level-crossing (1),
			point-machine (2),
			signal (3),
			non-core (4),
			additional-detection-system (5),
			branch (6),
			node (7),
			area(8) }

InfraPosition	::= CHOICE{
	node-id		[0] NodeId,
	position-on-branch		[1] PositionOnBranch  }

InfraSegment	::= SEQUENCE {
	start-position		InfraPosition,
	end-position		InfraPosition,
	branch-parts		SEQUENCE OF BranchPart  }

InMovementAuthorityIndication	::= ENUMERATED {
			no (0),
			yes (1),
			revocation-sent(2) }

InRouteIndication	::= ENUMERATED {
			no (0),
			yes (1),
			forced (2) }

IntegralRestrictionIndication	::= BOOLEAN


MatchTrainlabel	::= BOOLEAN

MaximumSpeed	::= TrainSpeed

MessageId	::= INTEGER

NIDOperational	::= INTEGER

NodeId		::= ElementId

NonCorePosition	::= SEQUENCE OF BOOLEAN
			-- the binary signal value(s) of 1..MAX contacts
			-- in the following sequence Bmax, Bmax-1, , B2, B1

NotificationId	::= SEQUENCE {
	subsystem-id		SubsystemId,
	equipment-code		EquipmentCode,
	alarm-code		AlarmCode,
	alarm-state		AlarmState,
	time-stamp		TimeStamp }

OccupiedIndication	::= BOOLEAN

OperatingMode	::= ENUMERATED {
			full-supervision (0),
			on-sight (1),
			staff-responsible (2),
			shunting (3),
			unfitted (4),
			sleeping (5),
			stand-by (6),
			trip (7),
			post-trip (8),
			system-failure (9),
			isolation (10),
			non-leading (11),
			stm-european (12),
			stm-national (13),
			reversing (14),
			spare (15) }

OutOfGaugeIndication	::= ENUMERATED {
			category-0 (0),
			category-1 (1),
			category-2 (2),
			category-3 (3) }

PointMachinePosition	::= INTEGER 	-- left = 0, right = 1, 

PositionOnBranch	::= SEQUENCE {
	branch-id		BranchId,
	distance-from-node-1		INTEGER , -- (0..999999), 	-- meters
	distance-from-node-2		INTEGER } -- (0..999999) } 	-- meters

RadioContactIndication	::= BOOLEAN

ReasonForBlocking	::= VisibleString

ReasonForChange	::= VisibleString

ReasonForNonAcceptance	::= TextMessage  -- message-id is NOT OPTIONAL for 
			-- this Textmessage

ReasonForRevocation	::= TextMessage

ReliabilityIndication	::= BOOLEAN

SignalPosition	::= ENUMERATED {
			red (0),
			yellow-flashing (1),
			yellow (2),
			green-flashing (3),
			green (4),
			white (5) ,
			fallback-proceed (6) }

SlipperyTrackButtonState	::= ENUMERATED {
			released (0),
			pressed (1) }

StartAcceptedIndication	::= BOOLEAN

StateDescription	::= ENUMERATED {
			defined-no-alarm (0),
			defined-alarm (1),
			defined-inhibited (2),
			defect-malfunctioning (3) }

SubsystemId	::= INTEGER

TemporarySpeedRestrictionId	::= VisibleString

TextMessage	::= SEQUENCE { 	--either id or text must be present
	message-id		INTEGER  OPTIONAL,	-- identification of message-text
	message-text		VisibleString OPTIONAL, 
	message-params		SEQUENCE OF VisibleString }

-- TimeStamp	::= CHOICE {
--			   Tijdstip	[0]	GeneralizedTime,
--			   Foute-tijd	[1]	VisibleString }
TimeStamp	::= GeneralizedTime
-- TimeStamp	::= VisibleString

TrainCategory	::= ENUMERATED {
			active-tilting-static-speed-profile (0),
			passive-tilting-static-speed-profile (1),
			cross-wind-sensitivity (2) }

TrainClass		::= SET OF TrainCategory 	-- empty means basic-static-speed-profile
			
Trainlabel		::= VisibleString 	-- trainlabel unknown = 00000000

TrainLength	::= INTEGER  	-- in meter

TrainRemovedFromDataBase	::= BOOLEAN

TrainSpeed	::= INTEGER  	-- in kilometer/hour  

TrainTrafficAreaId	::= VisibleString

VPTPrlBev21ProtocolId	::= VisibleString

