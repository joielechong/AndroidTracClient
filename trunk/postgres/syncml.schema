--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: postgres
--

CREATE PROCEDURAL LANGUAGE plpgsql;


ALTER PROCEDURAL LANGUAGE plpgsql OWNER TO postgres;

SET search_path = public, pg_catalog;

--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: mfvl
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    LANGUAGE c
    AS '$libdir/plpgsql', 'plpgsql_call_handler';


ALTER FUNCTION public.plpgsql_call_handler() OWNER TO mfvl;

SET default_tablespace = '';

SET default_with_oids = true;

--
-- Name: devices; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE devices (
    device_id integer NOT NULL,
    user_id integer,
    uri character varying
);


ALTER TABLE public.devices OWNER TO mfvl;

--
-- Name: devices_device_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE devices_device_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.devices_device_id_seq OWNER TO mfvl;

--
-- Name: devices_device_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE devices_device_id_seq OWNED BY devices.device_id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE users (
    user_id integer NOT NULL,
    name character varying,
    password character varying
);


ALTER TABLE public.users OWNER TO mfvl;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.users_user_id_seq OWNER TO mfvl;

--
-- Name: users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE users_user_id_seq OWNED BY users.user_id;


SET default_with_oids = false;

--
-- Name: vbookmarks; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vbookmarks (
    vbookmark_id integer NOT NULL,
    user_id integer,
    vbookmark text,
    creation_ts integer,
    update_ts integer
);


ALTER TABLE public.vbookmarks OWNER TO mfvl;

--
-- Name: vbookmarks_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vbookmarks_maps (
    device_id integer,
    vbookmark_id integer,
    remote_id character varying
);


ALTER TABLE public.vbookmarks_maps OWNER TO mfvl;

--
-- Name: vbookmarks_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vbookmarks_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vbookmarks_syncs OWNER TO mfvl;

--
-- Name: vbookmarks_vbookmark_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE vbookmarks_vbookmark_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vbookmarks_vbookmark_id_seq OWNER TO mfvl;

--
-- Name: vbookmarks_vbookmark_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE vbookmarks_vbookmark_id_seq OWNED BY vbookmarks.vbookmark_id;


SET default_with_oids = true;

--
-- Name: vcalendars; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars (
    vcalendar_id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vcalendar text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vcalendars OWNER TO mfvl;

--
-- Name: vcalendars_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars_maps (
    device_id integer,
    vcalendar_id integer,
    remote_id character varying
);


ALTER TABLE public.vcalendars_maps OWNER TO mfvl;

--
-- Name: vcalendars_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vcalendars_syncs OWNER TO mfvl;

--
-- Name: vcalendars_vcalendar_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE vcalendars_vcalendar_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vcalendars_vcalendar_id_seq OWNER TO mfvl;

--
-- Name: vcalendars_vcalendar_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE vcalendars_vcalendar_id_seq OWNED BY vcalendars.vcalendar_id;


--
-- Name: vcards; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards (
    vcard_id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vcard text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vcards OWNER TO mfvl;

--
-- Name: vcards_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards_maps (
    device_id integer,
    vcard_id integer,
    remote_id character varying
);


ALTER TABLE public.vcards_maps OWNER TO mfvl;

--
-- Name: vcards_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vcards_syncs OWNER TO mfvl;

--
-- Name: vcards_vcard_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE vcards_vcard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vcards_vcard_id_seq OWNER TO mfvl;

--
-- Name: vcards_vcard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE vcards_vcard_id_seq OWNED BY vcards.vcard_id;


--
-- Name: vnotes; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes (
    vnote_id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vnote text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vnotes OWNER TO mfvl;

--
-- Name: vnotes_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes_maps (
    device_id integer,
    vnote_id integer,
    remote_id character varying
);


ALTER TABLE public.vnotes_maps OWNER TO mfvl;

--
-- Name: vnotes_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vnotes_syncs OWNER TO mfvl;

--
-- Name: vnotes_vnote_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE vnotes_vnote_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vnotes_vnote_id_seq OWNER TO mfvl;

--
-- Name: vnotes_vnote_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE vnotes_vnote_id_seq OWNED BY vnotes.vnote_id;


SET default_with_oids = false;

--
-- Name: vtasks; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vtasks (
    vtask_id integer NOT NULL,
    user_id integer,
    vtask text,
    creation_ts integer,
    update_ts integer
);


ALTER TABLE public.vtasks OWNER TO mfvl;

--
-- Name: vtasks_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vtasks_maps (
    device_id integer,
    vtask_id integer,
    remote_id character varying
);


ALTER TABLE public.vtasks_maps OWNER TO mfvl;

--
-- Name: vtasks_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vtasks_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vtasks_syncs OWNER TO mfvl;

--
-- Name: vtasks_vtask_id_seq; Type: SEQUENCE; Schema: public; Owner: mfvl
--

CREATE SEQUENCE vtasks_vtask_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.vtasks_vtask_id_seq OWNER TO mfvl;

--
-- Name: vtasks_vtask_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mfvl
--

ALTER SEQUENCE vtasks_vtask_id_seq OWNED BY vtasks.vtask_id;


--
-- Name: device_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE devices ALTER COLUMN device_id SET DEFAULT nextval('devices_device_id_seq'::regclass);


--
-- Name: user_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE users ALTER COLUMN user_id SET DEFAULT nextval('users_user_id_seq'::regclass);


--
-- Name: vbookmark_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE vbookmarks ALTER COLUMN vbookmark_id SET DEFAULT nextval('vbookmarks_vbookmark_id_seq'::regclass);


--
-- Name: vcalendar_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE vcalendars ALTER COLUMN vcalendar_id SET DEFAULT nextval('vcalendars_vcalendar_id_seq'::regclass);


--
-- Name: vcard_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE vcards ALTER COLUMN vcard_id SET DEFAULT nextval('vcards_vcard_id_seq'::regclass);


--
-- Name: vnote_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE vnotes ALTER COLUMN vnote_id SET DEFAULT nextval('vnotes_vnote_id_seq'::regclass);


--
-- Name: vtask_id; Type: DEFAULT; Schema: public; Owner: mfvl
--

ALTER TABLE vtasks ALTER COLUMN vtask_id SET DEFAULT nextval('vtasks_vtask_id_seq'::regclass);


--
-- Name: devices_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY devices
    ADD CONSTRAINT devices_pkey PRIMARY KEY (device_id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: vbookmarks_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vbookmarks
    ADD CONSTRAINT vbookmarks_pkey PRIMARY KEY (vbookmark_id);


--
-- Name: vcalendars_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vcalendars
    ADD CONSTRAINT vcalendars_pkey PRIMARY KEY (vcalendar_id);


--
-- Name: vcards_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vcards
    ADD CONSTRAINT vcards_pkey PRIMARY KEY (vcard_id);


--
-- Name: vnotes_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vnotes
    ADD CONSTRAINT vnotes_pkey PRIMARY KEY (vnote_id);


--
-- Name: vtasks_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vtasks
    ADD CONSTRAINT vtasks_pkey PRIMARY KEY (vtask_id);


--
-- Name: devices_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY devices
    ADD CONSTRAINT devices_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vbookmarks_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vbookmarks_maps
    ADD CONSTRAINT vbookmarks_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vbookmarks_maps_vbookmark_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vbookmarks_maps
    ADD CONSTRAINT vbookmarks_maps_vbookmark_id_fkey FOREIGN KEY (vbookmark_id) REFERENCES vbookmarks(vbookmark_id);


--
-- Name: vbookmarks_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vbookmarks_syncs
    ADD CONSTRAINT vbookmarks_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vbookmarks_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vbookmarks
    ADD CONSTRAINT vbookmarks_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vcalendars_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_maps
    ADD CONSTRAINT vcalendars_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcalendars_maps_vcalendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_maps
    ADD CONSTRAINT vcalendars_maps_vcalendar_id_fkey FOREIGN KEY (vcalendar_id) REFERENCES vcalendars(vcalendar_id);


--
-- Name: vcalendars_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_syncs
    ADD CONSTRAINT vcalendars_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcalendars_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars
    ADD CONSTRAINT vcalendars_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vcards_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_maps
    ADD CONSTRAINT vcards_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcards_maps_vcard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_maps
    ADD CONSTRAINT vcards_maps_vcard_id_fkey FOREIGN KEY (vcard_id) REFERENCES vcards(vcard_id);


--
-- Name: vcards_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_syncs
    ADD CONSTRAINT vcards_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcards_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards
    ADD CONSTRAINT vcards_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vnotes_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_maps
    ADD CONSTRAINT vnotes_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vnotes_maps_vnote_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_maps
    ADD CONSTRAINT vnotes_maps_vnote_id_fkey FOREIGN KEY (vnote_id) REFERENCES vnotes(vnote_id);


--
-- Name: vnotes_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_syncs
    ADD CONSTRAINT vnotes_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vnotes_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes
    ADD CONSTRAINT vnotes_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vtasks_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vtasks_maps
    ADD CONSTRAINT vtasks_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vtasks_maps_vtask_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vtasks_maps
    ADD CONSTRAINT vtasks_maps_vtask_id_fkey FOREIGN KEY (vtask_id) REFERENCES vtasks(vtask_id);


--
-- Name: vtasks_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vtasks_syncs
    ADD CONSTRAINT vtasks_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vtasks_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vtasks
    ADD CONSTRAINT vtasks_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

