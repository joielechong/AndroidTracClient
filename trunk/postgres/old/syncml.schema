--
-- PostgreSQL database dump
--

SET client_encoding = 'SQL_ASCII';
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'Standard public schema';


SET search_path = public, pg_catalog;

--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: mfvl
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    AS '$libdir/plpgsql', 'plpgsql_call_handler'
    LANGUAGE c;


ALTER FUNCTION public.plpgsql_call_handler() OWNER TO mfvl;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: public; Owner: 
--

CREATE TRUSTED PROCEDURAL LANGUAGE plpgsql HANDLER plpgsql_call_handler;


SET default_tablespace = '';

SET default_with_oids = true;

--
-- Name: devices; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE devices (
    device_id serial NOT NULL,
    user_id integer,
    uri character varying
);


ALTER TABLE public.devices OWNER TO mfvl;

--
-- Name: users; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE users (
    user_id serial NOT NULL,
    name character varying,
    "password" character varying
);


ALTER TABLE public.users OWNER TO mfvl;

--
-- Name: vcalendars; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars (
    vcalendar_id serial NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vcalendar text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vcalendars OWNER TO mfvl;

--
-- Name: vcalendars_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars_maps (
    device_id integer,
    vcalendar_id integer,
    remote_id character varying
);


ALTER TABLE public.vcalendars_maps OWNER TO mfvl;

--
-- Name: vcalendars_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcalendars_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vcalendars_syncs OWNER TO mfvl;

--
-- Name: vcards; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards (
    vcard_id serial NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vcard text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vcards OWNER TO mfvl;

--
-- Name: vcards_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards_maps (
    device_id integer,
    vcard_id integer,
    remote_id character varying
);


ALTER TABLE public.vcards_maps OWNER TO mfvl;

--
-- Name: vcards_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vcards_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vcards_syncs OWNER TO mfvl;

--
-- Name: vnotes; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes (
    vnote_id serial NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    vnote text,
    creation_ts integer DEFAULT 0 NOT NULL,
    update_ts integer
);


ALTER TABLE public.vnotes OWNER TO mfvl;

--
-- Name: vnotes_maps; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes_maps (
    device_id integer,
    vnote_id integer,
    remote_id character varying
);


ALTER TABLE public.vnotes_maps OWNER TO mfvl;

--
-- Name: vnotes_syncs; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE vnotes_syncs (
    device_id integer,
    local_last_anchor integer,
    remote_last_anchor character varying
);


ALTER TABLE public.vnotes_syncs OWNER TO mfvl;

--
-- Name: devices_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY devices
    ADD CONSTRAINT devices_pkey PRIMARY KEY (device_id);


ALTER INDEX public.devices_pkey OWNER TO mfvl;

--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


ALTER INDEX public.users_pkey OWNER TO mfvl;

--
-- Name: vcalendars_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vcalendars
    ADD CONSTRAINT vcalendars_pkey PRIMARY KEY (vcalendar_id);


ALTER INDEX public.vcalendars_pkey OWNER TO mfvl;

--
-- Name: vcards_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vcards
    ADD CONSTRAINT vcards_pkey PRIMARY KEY (vcard_id);


ALTER INDEX public.vcards_pkey OWNER TO mfvl;

--
-- Name: vnotes_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY vnotes
    ADD CONSTRAINT vnotes_pkey PRIMARY KEY (vnote_id);


ALTER INDEX public.vnotes_pkey OWNER TO mfvl;

--
-- Name: devices_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY devices
    ADD CONSTRAINT devices_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vcalendars_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_maps
    ADD CONSTRAINT vcalendars_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcalendars_maps_vcalendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_maps
    ADD CONSTRAINT vcalendars_maps_vcalendar_id_fkey FOREIGN KEY (vcalendar_id) REFERENCES vcalendars(vcalendar_id);


--
-- Name: vcalendars_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars_syncs
    ADD CONSTRAINT vcalendars_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcalendars_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcalendars
    ADD CONSTRAINT vcalendars_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vcards_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_maps
    ADD CONSTRAINT vcards_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcards_maps_vcard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_maps
    ADD CONSTRAINT vcards_maps_vcard_id_fkey FOREIGN KEY (vcard_id) REFERENCES vcards(vcard_id);


--
-- Name: vcards_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards_syncs
    ADD CONSTRAINT vcards_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vcards_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vcards
    ADD CONSTRAINT vcards_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: vnotes_maps_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_maps
    ADD CONSTRAINT vnotes_maps_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vnotes_maps_vnote_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_maps
    ADD CONSTRAINT vnotes_maps_vnote_id_fkey FOREIGN KEY (vnote_id) REFERENCES vnotes(vnote_id);


--
-- Name: vnotes_syncs_device_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes_syncs
    ADD CONSTRAINT vnotes_syncs_device_id_fkey FOREIGN KEY (device_id) REFERENCES devices(device_id);


--
-- Name: vnotes_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: mfvl
--

ALTER TABLE ONLY vnotes
    ADD CONSTRAINT vnotes_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(user_id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

