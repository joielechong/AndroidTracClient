--
-- PostgreSQL database dump
--

SET client_encoding = 'SQL_ASCII';
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'Standard public schema';


SET search_path = public, pg_catalog;

--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: mfvl
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    AS '$libdir/plpgsql', 'plpgsql_call_handler'
    LANGUAGE c;


ALTER FUNCTION public.plpgsql_call_handler() OWNER TO mfvl;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: public; Owner: 
--

CREATE TRUSTED PROCEDURAL LANGUAGE plpgsql HANDLER plpgsql_call_handler;


SET default_tablespace = '';

SET default_with_oids = true;

--
-- Name: cache_task; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE cache_task (
    state integer
);


ALTER TABLE public.cache_task OWNER TO mfvl;

--
-- Name: ulog; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE ulog (
    id integer DEFAULT nextval('seq_ulog'::text) NOT NULL,
    oob_prefix character varying(32),
    oob_time_sec integer,
    oob_time_usec integer,
    oob_mark bigint,
    oob_in character varying(32),
    oob_out character varying(32),
    raw_mac character varying(80),
    raw_pktlen bigint,
    ip_ihl smallint,
    ip_tos smallint,
    ip_totlen integer,
    ip_id integer,
    ip_fragoff integer,
    ip_ttl smallint,
    ip_protocol smallint,
    ip_csum integer,
    ip_saddr inet,
    ip_daddr inet,
    tcp_sport integer,
    tcp_dport integer,
    tcp_seq bigint,
    tcp_ackseq bigint,
    tcp_urg boolean,
    tcp_ack boolean,
    tcp_psh boolean,
    tcp_rst boolean,
    tcp_syn boolean,
    tcp_fin boolean,
    tcp_window integer,
    tcp_urgp integer,
    udp_sport integer,
    udp_dport integer,
    udp_len integer,
    icmp_type smallint,
    icmp_code smallint,
    icmp_echoid integer,
    icmp_echoseq integer,
    icmp_gateway bigint,
    icmp_fragmtu integer,
    pwsniff_user character varying(30),
    pwsniff_pass character varying(30),
    ahesp_spi smallint,
    local_time bigint,
    local_hostname character varying(40),
    state smallint,
    end_timestamp timestamp without time zone,
    start_timestamp timestamp without time zone,
    username character varying,
    client_app character varying,
    "timestamp" timestamp without time zone,
    user_id integer,
    client_os character varying
);


ALTER TABLE public.ulog OWNER TO postgres;

--
-- Name: icmp; Type: VIEW; Schema: public; Owner: mfvl
--

CREATE VIEW icmp AS
    SELECT ulog.ip_saddr, ulog.icmp_type, ulog.icmp_code, count(ulog.id) AS count, min(ulog.oob_time_sec) AS "first", max(ulog.oob_time_sec) AS "last" FROM ulog WHERE (ulog.ip_protocol = 1) GROUP BY ulog.ip_saddr, ulog.icmp_type, ulog.icmp_code ORDER BY max(ulog.oob_time_sec) DESC;


ALTER TABLE public.icmp OWNER TO mfvl;

--
-- Name: last_update; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE last_update (
    "timestamp" timestamp without time zone NOT NULL
);


ALTER TABLE public.last_update OWNER TO mfvl;

--
-- Name: offenders; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE offenders (
    ip_addr inet NOT NULL,
    first_time integer,
    last_time integer,
    count integer
);


ALTER TABLE public.offenders OWNER TO mfvl;

--
-- Name: seq_ulog; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_ulog
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_ulog OWNER TO postgres;

--
-- Name: tcp; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW tcp AS
    SELECT ulog.tcp_dport, ulog.ip_saddr, count(ulog.id) AS count FROM ulog WHERE (ulog.ip_protocol = 6) GROUP BY ulog.tcp_dport, ulog.ip_saddr ORDER BY ulog.tcp_dport, count(ulog.id) DESC;


ALTER TABLE public.tcp OWNER TO postgres;

--
-- Name: tcp_ports; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE tcp_ports (
    tcp_dport integer DEFAULT 0::smallint NOT NULL,
    first_time integer,
    last_time integer,
    count integer
);


ALTER TABLE public.tcp_ports OWNER TO mfvl;

--
-- Name: udp; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW udp AS
    SELECT ulog.udp_dport, ulog.ip_saddr, count(ulog.id) AS count FROM ulog WHERE (ulog.ip_protocol = 17) GROUP BY ulog.udp_dport, ulog.ip_saddr ORDER BY ulog.udp_dport, count(ulog.id) DESC;


ALTER TABLE public.udp OWNER TO postgres;

--
-- Name: udp_ports; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE udp_ports (
    udp_dport integer DEFAULT 0::smallint NOT NULL,
    first_time integer,
    last_time integer,
    count integer
);


ALTER TABLE public.udp_ports OWNER TO mfvl;

--
-- Name: users; Type: TABLE; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE TABLE users (
    user_id smallint NOT NULL,
    username character varying(30),
    bad_conns integer DEFAULT 0 NOT NULL,
    good_conns integer DEFAULT 0 NOT NULL,
    first_time integer,
    last_time integer
);


ALTER TABLE public.users OWNER TO mfvl;

--
-- Name: offenders_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY offenders
    ADD CONSTRAINT offenders_pkey PRIMARY KEY (ip_addr);


ALTER INDEX public.offenders_pkey OWNER TO mfvl;

--
-- Name: tcp_ports_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY tcp_ports
    ADD CONSTRAINT tcp_ports_pkey PRIMARY KEY (tcp_dport);


ALTER INDEX public.tcp_ports_pkey OWNER TO mfvl;

--
-- Name: udp_ports_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY udp_ports
    ADD CONSTRAINT udp_ports_pkey PRIMARY KEY (udp_dport);


ALTER INDEX public.udp_ports_pkey OWNER TO mfvl;

--
-- Name: ulog_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY ulog
    ADD CONSTRAINT ulog_pkey PRIMARY KEY (id);


ALTER INDEX public.ulog_pkey OWNER TO postgres;

--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: mfvl; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


ALTER INDEX public.users_pkey OWNER TO mfvl;

--
-- Name: tcp_last_time; Type: INDEX; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE INDEX tcp_last_time ON tcp_ports USING btree (last_time);


ALTER INDEX public.tcp_last_time OWNER TO mfvl;

--
-- Name: udp_last_time; Type: INDEX; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE INDEX udp_last_time ON udp_ports USING btree (last_time);


ALTER INDEX public.udp_last_time OWNER TO mfvl;

--
-- Name: ulog_ip_saddr; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX ulog_ip_saddr ON ulog USING btree (ip_saddr);


ALTER INDEX public.ulog_ip_saddr OWNER TO postgres;

--
-- Name: ulog_tcp_dport; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX ulog_tcp_dport ON ulog USING btree (tcp_dport);


ALTER INDEX public.ulog_tcp_dport OWNER TO postgres;

--
-- Name: ulog_time; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX ulog_time ON ulog USING btree (oob_time_sec);


ALTER INDEX public.ulog_time OWNER TO postgres;

--
-- Name: ulog_udp_dport; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX ulog_udp_dport ON ulog USING btree (udp_dport);


ALTER INDEX public.ulog_udp_dport OWNER TO postgres;

--
-- Name: username; Type: INDEX; Schema: public; Owner: mfvl; Tablespace: 
--

CREATE INDEX username ON users USING btree (username);


ALTER INDEX public.username OWNER TO mfvl;

--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

