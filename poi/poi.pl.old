#! /usr/bin/perl -w

use strict;
use Archive::Zip qw( :ERROR_CODES );
use DBI;
#use DBD::ADO::Const();


my ($dbh,$sth1,$sth2,$sth3,$sth4,$sth5,$sth6,$sth7,$sth8,$sth9);

sub db_init {
#  $dbh = DBI->connect("dbi:ADO:Provider=Microsoft.Jet.OLEDB.4.0;Data Source=radar.mdb");
  $dbh = DBI->connect("dbi:Pg:dbname=mfvl");

  $sth1=$dbh->prepare("INSERT INTO pois.posten (file,lat,lon,commentaar,naam,updated,changed,rel_id) VALUES (?,?,?,?,?,'yes','yes',NULL)");
  $sth2=$dbh->prepare("INSERT INTO pois.inputfiles (naam) VALUES (?)");
  $sth3=$dbh->prepare("SELECT naam FROM pois.inputfiles WHERE naam = ?");
  $sth4=$dbh->prepare("SELECT file,lat,lon,commentaar from pois.posten WHERE naam = ?");
  $sth5=$dbh->prepare("UPDATE pois.posten SET updated=yes,changed=yes WHERE naam=?");
  $sth6=$dbh->prepare("UPDATE pois.posten SET updated='yes' WHERE naam=?");
  $sth7=$dbh->prepare("UPDATE pois.posten SET file=?,lat=?,lon=?,commentaar=?,updated=yes,changed=yes WHERE naam=?");
  $sth8=$dbh->prepare("SELECT naam FROM pois.posten WHERE lon=? AND lat=? AND file=?");
  $sth9=$dbh->prepare("UPDATE pois.posten set naam=? WHERE lon=? AND lat=? AND file=?");
}

sub process_regel {
  my ($file,$line,$regel) = @_;

  my $naam;
  my $alwayschange=0;
    
	return if $regel =~ /^;/;
	return if $regel =~ /^$/;
 
  my ($lon,$lat,$comment)= ($regel =~ /^[ ]*([\-]?\d+\.\d+)[ ]*,[ ]*([\-]?\d+\.\d+)[ ]*[,;][ ]*\"(.*)\"/);

  my @naam;
  
  if ($file =~ m/.*-Blitzer.*-m_NF.asc/ ) {
    return;
  } elsif ($file =~ m/.*-Blitzer-.*.asc/) {
    @naam=split('\|',$comment);
    $naam=$naam[0];
  } elsif ($file =~ m/bnl_.*/) {
	  @naam=split(']',$comment);
	  $naam=$naam[0]."]".$naam[1]."]";
  } elsif ($file =~ m/leadtek_.*/) {
	  $naam=$comment;
  } elsif ($file =~ m/Trajectcontroles .*/) {
    @naam=split(']',$comment);
	  $naam=$naam[0]."]".$naam[1]."]";
  } elsif( $file =~ m/Flitsservice.*/) {
	  $naam = sprintf("flits-%7.5f-%7.5f",$lon,$lat);
    $alwayschange=1;
  } elsif( $file =~ m/Radars-Mobiles.*/) {
    return;
  } elsif( $file =~ m/.*goedkoper.*/) {
    return;
  } elsif ($file eq "SCFormat.asc") {
    return;
  } elsif( $file =~ m/Radars.*/) {
	  $naam = sprintf("radar-%7.5f-%7.5f",$lon,$lat);
  } elsif( $file =~ m/Speed_Camera.*/) {
	  $naam = sprintf("speed-%7.5f-%7.5f",$lon,$lat);
  } elsif( $file =~ m/Zones.*/) {
	  $naam = sprintf("zone-%7.5f-%7.5f",$lon,$lat);
  } else {
    $naam=$comment;
  }
  $comment =~ s/\$0x.*\$//;
  
  $sth8->execute($lon,$lat,$file);
  if (my $naamold = $sth8->fetchrow_array) {
    if ($naamold ne $naam) {
      $sth9->execute($naam,$lon,$lat,$file);
      print "Gewijzigd: $naamold --> $naam\n  lon: $lon, lat: $lat, file: $file, comment: $comment\n";
    }
  }
    
  $sth4->execute($naam);
  if (my ($filenew,$latnew,$lonnew,$commentnew)=$sth4->fetchrow_array) {
    my $latdiff = abs($lat-$latnew);
    my $londiff = abs($lon-$lonnew);
    if ($file ne $filenew || $latdiff > 1.e-6 || $londiff > 1.e-6 || $comment ne $commentnew) {
	    $sth7->execute($file,$lat,$lon,$comment,$naam);
	    print "Gewijzigd: $naam\n";
	    print "  Lon $lonnew --> $lon\n" if $londiff >1.e-6;
	    print "  Lat $latnew --> $lat\n" if $latdiff >1.e-6;
	    print "  File $filenew --> $file\n" if $file ne $filenew;
	    print "  Comment $commentnew --> $comment\n" if $comment ne $commentnew;
    } else {
      if ($alwayschange==0) {
	      $sth6->execute($naam);
      } else {
        $sth5->execute($naam);
      }
    }
  } else {
    print "Toegevoegd: $lon, $lat, $comment, $naam\n";
    $sth1->execute($file,$lat,$lon,$comment,$naam);
  }
  if ($@) {
	  print "$file:$line ",$dbh->errstr,"\n";
  }
}

sub reset_files {
  $dbh->do("UPDATE pois.posten set updated=no where file in ('" . join("','",@_) . "')");
}

sub lees_zip {
  my $zipnaam = shift;
  my  $zip = Archive::Zip->new();
  die "whoops!" unless $zip->read($zipnaam  ) == AZ_OK;

  my @members = grep { /\.asc$/} $zip->memberNames();

  reset_files(@members);

  foreach my $mem (@members) {
	  print $mem,"\n";

	  my $member = $zip->memberNamed($mem);
	  $sth3->execute($mem);
	  unless ($sth3->fetchrow_array) {
	    $sth2->execute($mem);
	  }

	  my $contents = $member->contents();
#    my @lines = grep {!/^\r$/} grep {!/^;/} split("\n",$contents);
	  my @lines = split("\n",$contents);
	  my $line=0;
	  foreach (@lines) {
	    $line++;
	    chomp;
	    s/\r//;
	    /(.*),(.*)[,;]\"(.*)\".*$/;
	    process_regel($mem,$line,$_);
	  }
  }
}

sub lees_dir {
  my $directory = shift;
  my $file;

  opendir(DIR, $directory) || die "Kan $directory niet openen: $!";
  my @ascs = grep { /\.asc$/ && -f "$directory/$_" } readdir(DIR);
  closedir DIR;

  reset_files(@ascs);

  foreach $file (@ascs) {
    my $naam;
    my $line=0;
    print $file,"\n";
    $sth3->execute($file);
    unless ($sth3->fetchrow_array) {
      $sth2->execute($file);
    }
    open FIL , "<$directory/$file" or die "Kan $file niet openen\n";
    while (<FIL>) {
   	  $line++;
    	chomp;
	    process_regel($file,$line,$_);
    }
    close FIL;
  }
}
#exit();

db_init();
lees_dir(".");
lees_zip('pois-Blitzer.zip');
#lees_zip('C:/TEMP/pois-Blitzer-de.zip');

$dbh->disconnect();

